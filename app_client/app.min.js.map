{"version":3,"sources":["main.js","home/home.controller.js","profile/profile.controller.js","weather/weather.controller.js","common/services/authentication.service.js","common/services/data.service.js","common/services/post.service.js","auth/login/login.controller.js","auth/register/register.controller.js","common/directives/navigation/navigation.controller.js","common/directives/navigation/navigation.directive.js"],"names":["config","$routeProvider","$locationProvider","when","templateUrl","controller","controllerAs","html5Mode","run","$rootScope","$location","authentication","$on","event","nextRoute","currentRoute","path","isLoggedIn","angular","module","homeCtrl","postData","vm","this","post","test","getPosts","success","data","error","e","console","log","$inject","profileCtrl","meanData","user","getProfile","weatherCtrl","$http","$window","saveToken","token","localStorage","getToken","payload","split","atob","JSON","parse","exp","Date","now","currentUser","email","name","register","login","logout","removeItem","service","get","headers","Authorization","loginCtrl","credentials","password","onSubmit","err","alert","then","registerCtrl","navigationCtrl","navigation","restrict","directive"],"mappings":"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","file":"app.min.js","sourcesContent":["(function () {\r\n\r\n  angular.module('meanApp', ['ngRoute']);\r\n\r\n  function config ($routeProvider, $locationProvider) {\r\n    $routeProvider\r\n      .when('/', {\r\n        templateUrl: 'home/home.view.html',\r\n        controller: 'homeCtrl',\r\n        controllerAs: 'vm'\r\n      })\r\n      .when('/register', {\r\n        templateUrl: '/auth/register/register.view.html',\r\n        controller: 'registerCtrl',\r\n        controllerAs: 'vm'\r\n      })\r\n      .when('/login', {\r\n        templateUrl: '/auth/login/login.view.html',\r\n        controller: 'loginCtrl',\r\n        controllerAs: 'vm'\r\n      })\r\n      .when('/profile', {\r\n        templateUrl: '/profile/profile.view.html',\r\n        controller: 'profileCtrl',\r\n        controllerAs: 'vm'\r\n      })\r\n      .when('/weather', {\r\n          templateUrl: '/weather/weather.view.html',\r\n          controller: 'weatherCtrl',\r\n          controllerAs: 'vm'\r\n      })\r\n\r\n\r\n    // use the HTML5 History API\r\n    $locationProvider.html5Mode(true);\r\n  }\r\n\r\n  function run($rootScope, $location, authentication) {\r\n    $rootScope.$on('$routeChangeStart', function(event, nextRoute, currentRoute) {\r\n      if ($location.path() === '/profile' && !authentication.isLoggedIn()) {\r\n        $location.path('/');\r\n      }\r\n    });\r\n  }\r\n\r\n  angular\r\n    .module('meanApp').config(['$routeProvider', '$locationProvider', config]).run(['$rootScope', '$location', 'authentication', run]);\r\n\r\n})();\r\n","(function() {\r\n\r\n  angular\r\n    .module('meanApp')\r\n    .controller('homeCtrl', homeCtrl);\r\n    console.log('sups');\r\n\r\n    homeCtrl.$inject = ['$location','postData'];\r\n    function homeCtrl ($location,postData) {\r\n      var vm = this;\r\n      vm.post = {};\r\n      vm.test = 'do something crazy';\r\n\r\n      postData.getPosts()\r\n      .success(function(data){\r\n        vm.post = data;\r\n      })\r\n      .error(function(e){\r\n        console.log(e);\r\n      });\r\n\r\n\r\n    }\r\n\r\n})();\r\n","(function() {\r\n\r\n  angular\r\n    .module('meanApp').controller('profileCtrl', profileCtrl);\r\n\r\n  profileCtrl.$inject = ['$location', 'meanData'];\r\n  function profileCtrl($location, meanData) {\r\n    var vm = this;\r\n\r\n    vm.user = {};\r\n\r\n    meanData.getProfile()\r\n      .success(function(data) {\r\n        vm.user = data;\r\n      })\r\n      .error(function (e) {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n})();\r\n","(function() {\r\n\r\n  angular\r\n    .module('meanApp')\r\n    .controller('weatherCtrl', weatherCtrl);\r\n\r\n    function weatherCtrl () {\r\n      console.log('Weather controller is running');\r\n    }\r\n\r\n})();\r\n","(function () {\r\n\r\n  angular\r\n    .module('meanApp').service('authentication', authentication);\r\n\r\n  authentication.$inject = ['$http', '$window'];\r\n  function authentication ($http, $window) {\r\n\r\n    var saveToken = function (token) {\r\n      $window.localStorage['mean-token'] = token;\r\n    };\r\n\r\n    var getToken = function () {\r\n      return $window.localStorage['mean-token'];\r\n    };\r\n\r\n    var isLoggedIn = function() {\r\n      var token = getToken();\r\n      var payload;\r\n\r\n      if(token){\r\n        payload = token.split('.')[1];\r\n        payload = $window.atob(payload);\r\n        payload = JSON.parse(payload);\r\n\r\n        return payload.exp > Date.now() / 1000;\r\n      } else {\r\n        return false;\r\n      }\r\n    };\r\n\r\n    var currentUser = function() {\r\n      if(isLoggedIn()){\r\n        var token = getToken();\r\n        var payload = token.split('.')[1];\r\n        payload = $window.atob(payload);\r\n        payload = JSON.parse(payload);\r\n        return {\r\n          email : payload.email,\r\n          name : payload.name\r\n        };\r\n      }\r\n    };\r\n\r\n    register = function(user) {\r\n      return $http.post('/api/register', user).success(function(data){\r\n        saveToken(data.token);\r\n      });\r\n    };\r\n\r\n    login = function(user) {\r\n      return $http.post('/api/login', user).success(function(data) {\r\n        saveToken(data.token);\r\n      });\r\n    };\r\n\r\n    logout = function() {\r\n      $window.localStorage.removeItem('mean-token');\r\n    };\r\n\r\n    return {\r\n      currentUser : currentUser,\r\n      saveToken : saveToken,\r\n      getToken : getToken,\r\n      isLoggedIn : isLoggedIn,\r\n      register : register,\r\n      login : login,\r\n      logout : logout\r\n    };\r\n  }\r\n\r\n\r\n})();\r\n","(function() {\r\n\r\n  angular\r\n    .module('meanApp').service('meanData', meanData);\r\n\r\n  meanData.$inject = ['$http', 'authentication'];\r\n  function meanData ($http, authentication) {\r\n\r\n    var getProfile = function () {\r\n      return $http.get('/api/profile', {\r\n        headers: {\r\n          Authorization: 'Bearer '+ authentication.getToken()\r\n        }\r\n      });\r\n    };\r\n\r\n    return {\r\n      getProfile : getProfile\r\n    };\r\n  }\r\n\r\n})();\r\n","(function(){\r\n\r\n\tangular\r\n\t.module('meanApp')\r\n\t.service('postData',postData);\r\n\r\n\tpostData.$inject = ['$http','authentication'];\r\n\tfunction postData($http,authentication){\r\n\r\n  \tvar getPosts = function(){\r\n  \t\treturn $http.get('/api/traffic');\r\n  \t};\r\n\r\n\t  return{\r\n      getPosts: getPosts\r\n    };\r\n\t}\r\n\r\n})();\r\n","(function () {\r\n\r\n  angular\r\n  .module('meanApp')\r\n  .controller('loginCtrl', loginCtrl);\r\n\r\n  loginCtrl.$inject = ['$location', 'authentication'];\r\n  function loginCtrl($location, authentication) {\r\n    var vm = this;\r\n\r\n    vm.credentials = {\r\n      email : \"\",\r\n      password : \"\"\r\n    };\r\n\r\n    vm.onSubmit = function () {\r\n      authentication\r\n        .login(vm.credentials)\r\n        .error(function(err){\r\n          alert(err);\r\n        })\r\n        .then(function(){\r\n          $location.path('profile');\r\n        });\r\n    };\r\n\r\n  }\r\n\r\n})();","(function () {\r\n\r\n  angular\r\n    .module('meanApp')\r\n    .controller('registerCtrl', registerCtrl);\r\n\r\n  registerCtrl.$inject = ['$location', 'authentication'];\r\n  function registerCtrl($location, authentication) {\r\n    var vm = this;\r\n\r\n    vm.credentials = {\r\n      name : \"\",\r\n      email : \"\",\r\n      password : \"\"\r\n    };\r\n\r\n    vm.onSubmit = function () {\r\n      console.log('Submitting registration');\r\n      authentication\r\n        .register(vm.credentials)\r\n        .error(function(err){\r\n          alert(err);\r\n        })\r\n        .then(function(){\r\n          $location.path('profile');\r\n        });\r\n    };\r\n\r\n  }\r\n\r\n})();","(function () {\r\n\r\n  angular\r\n    .module('meanApp')\r\n    .controller('navigationCtrl', navigationCtrl);\r\n\r\n  navigationCtrl.$inject = ['$location','authentication'];\r\n  function navigationCtrl($location, authentication) {\r\n    var vm = this;\r\n\r\n    vm.isLoggedIn = authentication.isLoggedIn();\r\n\r\n    vm.currentUser = authentication.currentUser();\r\n\r\n  }\r\n\r\n})();","(function () {\r\n\r\n  angular\r\n    .module('meanApp')\r\n    .directive('navigation', navigation);\r\n\r\n  function navigation () {\r\n    return {\r\n      restrict: 'EA',\r\n      templateUrl: '/common/directives/navigation/navigation.template.html',\r\n      controller: 'navigationCtrl as navvm'//alias of the controller, allows us to get rid of $scope keyword and use this keyword\r\n    };\r\n  }\r\n\r\n})();\r\n"]}